$max-gap:     2;
$gap-unit:    em;
$max-columns: 24;

$gaps: (
	gap:       $max-gap + $gap-unit,
	small-gap: ($max-gap / 2) + $gap-unit,
	tiny-gap:  ($max-gap / 4) + $gap-unit,
	no-gap:    0
);

.grid        { display: grid; }
.inline-grid { display: inline-grid; }

.grid,
.inline-grid {
	grid-template-columns: repeat(12, 1fr); // 12 is a safe default value

	@each $style, $size in $gaps {
		&.#{$style} {
			grid-gap: #{$size};
		}
	}

	& > *.span-all {
		grid-column-start: 1;
		grid-column-end: -1;
	}
}

@for $i from 1 through $max-columns {
	$n: ($max-columns + 1) - $i; // Columns is the inverse of this value

	.grid,
	.inline-grid {
		&.cols-#{$n},
		&.columns-#{$n} { grid-template-columns: repeat($n, 1fr); }

		& > .span-#{$i} {
			grid-column: auto / span $i;
		}

		& > .offset-#{$i} {
			grid-column-start: $i + 1 !important;
		}
	}
}